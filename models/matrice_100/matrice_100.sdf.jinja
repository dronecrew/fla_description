{#- parameters -#}
{%- set enable_gimbal = False -%}
{%- set enable_gazebo_lift_drag = False -%}

{#- general geometry -#}
{%- set motor_sep = 0.65 -%}
{%- set motor_x_sep = 0.65/np.sqrt(2) -%}

{#- fuselage -#}
{%- set fuse_m = 2.0 -%}
{%- set fuse_r = 0.2 -%}
{%- set fuse_h = 0.1 -%}
{%- set fuse_ixx = fuse_m/12*(3*fuse_r**2 + fuse_h**2) -%}
{%- set fuse_iyy = fuse_ixx -%}
{%- set fuse_izz = fuse_m*fuse_r**2/2 -%}

{#- rotors -#}
{%- set rtr_m = 0.019 -%}           {# mass, kg #}
{%- set rtr_r = 0.165 -%}           {# radius, m #}
{%- set rtr_w = 0.02 -%}            {# width, m #}
{%- set rtr_h = 0.001 -%}           {# thickness, m #}
{%- set rtr_ixx = rtr_m/12*(rtr_h**2 + rtr_w**2) -%}
{%- set rtr_iyy = rtr_m/12*(rtr_r**2 + rtr_h**2) -%}
{%- set rtr_izz = rtr_m/12*(rtr_w**2 + rtr_r**2) -%}
{%- set rtr_a0 = 0.05984281113 -%}
{%- set rtr_cla = 4.752798721 -%}
{%- set rtr_cda = 0.6417112299 -%}
{%- set rtr_cma = -1.8 -%}
{%- set rtr_alpha_stall = 0.3391428111 -%}
{%- set rtr_cla_stall = -3.85 -%}
{%- set rtr_cda_stall = -0.9233984055 -%}
{%- set rtr_cma_stall = 0 -%}
{%- set rtr_blade_area = rtr_r*rtr_w -%}
{%- set rtr_air_density = 1.2041 -%}
{%- set rtr_arm_data_list = [
  {'angle_deg': 45, 'dir': 'ccw', 'l': motor_sep/2},
  {'angle_deg': -135, 'dir': 'ccw', 'l': motor_sep/2},
  {'angle_deg': -45, 'dir': 'cw', 'l': motor_sep/2},
  {'angle_deg': 135, 'dir': 'cw', 'l': motor_sep/2},
  ]%}

{#- handle sensor attachment -#}
{%- if enable_gimbal -%}
  {%- set sensor_link = "tarot-t4-3d-gimbal::tilt-link" -%}
{%- else -%}
  {%- set sensor_link = "fuselage" -%}
{%- endif -%}

{%- macro cylinder(r, h) -%}
<geometry>
  <cylinder>
    <radius>{{r}}</radius>
    <length>{{h}}</length>
  </cylinder>
</geometry>
{%- endmacro -%}

{%- macro box(x, y, z) -%}
<geometry>
  <box>
    <size>{{x}} {{y}} {{z}}</size>
  </box>
</geometry>
{%- endmacro -%}

{%- macro inertial(m, ixx, iyy, izz) -%}
<inertial>
  <mass>{{m}}</mass>
  <inertia>
    <ixx>{{ixx}}</ixx>
    <iyy>{{iyy}}</iyy>
    <izz>{{izz}}</izz>
  </inertia>
</inertial>
{%- endmacro -%}

{%- macro mesh_colored(uri, color) -%}
<geometry>
  <mesh>
    <scale>1 1 1</scale>
    <uri>{{ uri }}</uri>
  </mesh>
</geometry>
<material>
  <script>
    <name>Gazebo/{{ color }}</name>
    <uri>file://media/materials/scripts/gazebo.material</uri>
  </script>
</material>
{%- endmacro -%}

{%- macro surface_props() -%}
<surface>
  <contact>
    <ode>
      <min_depth>0.001</min_depth>
      <max_vel>0</max_vel>
    </ode>
  </contact>
  <friction>
    <ode/>
  </friction>
</surface>
{%- endmacro -%}
<!-- DO NOT EDIT: Generated from matrice_100.sdf.jinja -->
<?xml version="1.0" ?>
<sdf version="1.5">

  <model name="matrice_100">

    <pose>0 0 0.2 0 0 0</pose>

    <self_collide>false</self_collide>

    <static>false</static>


    <link name="fuselage">
      {{ inertial(fuse_m, fuse_ixx, fuse_iyy, fuse_izz)|indent(6) }}

      <gravity>true</gravity>
      <self_collide>false</self_collide>
      <velocity_decay/>

      <visual name="fuselage_visual">
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://matrice_100/meshes/Matrice_100.dae</uri>
          </mesh>
        </geometry>
      </visual>

      <collision name="fuselage_collision">
        <pose>0 0 -0.025 0 0 0</pose>
        {{ box(motor_x_sep, motor_x_sep, 0.25)|indent(8) }}
        {{ surface_props()|indent(8) }}
      </collision>

    </link>

    {%- for n in range(4) -%}

      {%- set l = rtr_arm_data_list[n]['l'] -%}
      {%- set angle = np.deg2rad(rtr_arm_data_list[n]['angle_deg']) -%}
      {%- set dir = rtr_arm_data_list[n]['dir'] -%}
      {%- set pos = l*np.array([np.cos(angle), -np.sin(angle), 0]) -%}
      {%- set rtr_pos = pos + np.array([0, 0, 0.06]) -%}

      {%- if dir == 'ccw' -%}
        {%- set rtr_fwd = [0, 1, 0] -%}
        {%- set rtr_up = [0, 0, 1] -%}
        {%- set rtr_dir = "ccw" -%}
      {%- elif dir== 'cw' -%}
        {%- set rtr_fwd = [0, -1, 0] -%}
        {%- set rtr_up = [0, 0, 1] -%}
        {%- set rtr_dir = "cw" -%}
      {%- endif -%}

      {%- set prop_uri = "model://matrice_100/meshes/dji_13455_prop_{:s}.dae".format(rtr_dir)  %}

    <!--Rotor {{n}} -->
    <link name="rotor_{{n}}">

      <gravity>true</gravity>
      <self_collide>false</self_collide>
      <velocity_decay/>

      <pose>{{ rtr_pos|join(' ') }} 0 0 0</pose>
      {{ inertial(rtr_m, rtr_ixx, rtr_iyy, rtr_izz)| indent(6) }}
      <visual name="rotor_{{n}}_visual">
        <pose>0 0 0 0 0 0</pose>
        {{ mesh_colored(prop_uri, "DarkGrey")|indent(8) }}
      </visual>

      <collision name="rotor_{{n}}_collision">
        <pose>0 0 0 0 0 0 </pose>
        {{ box(2*rtr_r, rtr_w, rtr_h) | indent(8) }}
        {{ surface_props()|indent(8) }}
      </collision>

    </link>

    <joint name="rotor_{{n}}_joint" type="revolute">
      <parent>fuselage</parent>
      <child>rotor_{{n}}</child>
      <axis>0 0 1</axis>
    </joint>

    {% if enable_gazebo_lift_drag -%}
    <plugin name="rotor_{{n}}_top_blade" filename="libLiftDragPlugin.so">
      <a0>{{rtr_a0}}</a0>
      <cla>{{rtr_cla}}</cla>
      <cda>{{rtr_cda}}</cda>
      <cma>{{rtr_cma}}</cma>
      <alpha_stall>{{rtr_alpha_stall}}</alpha_stall>
      <cla_stall>{{rtr_cla_stall}}</cla_stall>
      <cda_stall>{{rtr_cda_stall}}</cda_stall>
      <cma_stall>{{rtr_cma_stall}}</cma_stall>
      <cp>{{rtr_r/2}} 0 0</cp>
      <area>{{rtr_blade_area}}</area>
      <air_density>{{rtr_air_density}}</air_density>
      <forward>{{rtr_fwd|join(' ')}}</forward>
      <upward>{{rtr_up|join(' ')}}</upward>
      <link_name>rotor_{{n}}</link_name>
    </plugin>

    <plugin name="rotor_{{n}}_bottom_blade" filename="libLiftDragPlugin.so">
      <a0>{{rtr_a0}}</a0>
      <cla>{{rtr_cla}}</cla>
      <cda>{{rtr_cda}}</cda>
      <cma>{{rtr_cma}}</cma>
      <alpha_stall>{{rtr_alpha_stall}}</alpha_stall>
      <cla_stall>{{rtr_cla_stall}}</cla_stall>
      <cda_stall>{{rtr_cda_stall}}</cda_stall>
      <cma_stall>{{rtr_cma_stall}}</cma_stall>
      <cp>{{-rtr_r/2}} 0 0</cp>
      <area>{{rtr_blade_area}}</area>
      <air_density>{{rtr_air_density}}</air_density>
      <forward>{{-rtr_fwd|join(' ')}}</forward>
      <upward>{{rtr_up|join(' ')}}</upward>
      <link_name>rotor_{{n}}</link_name>
    </plugin>
    {%- endif %}

    <plugin name='rotor_{{n}}_motor_model' filename='librotors_gazebo_motor_model.so'>
      <robotNamespace></robotNamespace>
      <jointName>rotor_{{n}}_joint</jointName>
      <linkName>rotor_{{n}}</linkName>
      <turningDirection>{{rtr_dir}}</turningDirection>
      <timeConstantUp>0.0125</timeConstantUp>
      <timeConstantDown>0.025</timeConstantDown>
      <maxRotVelocity>1100</maxRotVelocity>
      <motorConstant>8.54858e-06</motorConstant>
      <momentConstant>0.06</momentConstant>
      <commandSubTopic>/gazebo/command/motor_speed</commandSubTopic>
      <motorNumber>{{n}}</motorNumber>
      <rotorDragCoefficient>0.000806428</rotorDragCoefficient>
      <rollingMomentCoefficient>1e-06</rollingMomentCoefficient>
      <motorSpeedPubTopic>/motor_speed/{{n}}</motorSpeedPubTopic>
      <rotorVelocitySlowdownSim>10</rotorVelocitySlowdownSim>
    </plugin>

    {%- endfor %}

    {#
    <!--standard gazebo sensors-->

    <!--Pixhawk autopilot-->
    <!--<include>-->
      <!--<uri>model://pixhawk</uri>-->
      <!--<pose>0 0 0.03 0 0 0</pose>-->
    <!--</include>-->

    <!--<joint name="pixhawk_joint" type="fixed">-->
      <!--<parent>fuselage</parent>-->
      <!--<child>pixhawk::link</child>-->
    <!--</joint>-->

    <!--3DR GPS and Magnetometer-->
    <!--<include>-->
      <!--<uri>model://3DR_gps_mag</uri>-->
      <!--<pose> 0 0 0.07 0 0 0</pose>-->
    <!--</include>-->

    <!--<joint name="3DR_gps_mag_joint" type="fixed">-->
      <!--<parent>fuselage</parent>-->
      <!--<child>3DR_gps_mag::link</child>-->
    <!--</joint>-->

    <!--MB1240 XL EZ4 Sonar-->
    <!--<include>-->
      <!--<uri>model://mb1240-xl-ez4</uri>-->
      <!--<pose>0 0 -0.02 0 0 0</pose>-->
    <!--</include>-->

    <!--<joint name="mb1240-xl-ez4_joint" type="fixed">-->
      <!--<parent>fuselage</parent>-->
      <!--<child>mb1240-xl-ez4::link</child>-->
    <!--</joint>-->

    <!--This is what plugin should look like if using standard sensors-->
    <plugin name="mavlink" filename="libgazebo_mavlink.so">
      <imu_topic>fuselage/pixhawk/link/mpu-6000/imu</imu_topic>
      <gps_topic>fuselage/3DR_gps_mag/link/ublox-neo-7/gps</gps_topic>
      <mag_topic>fuselage/3DR_gps_mag/link/HMC5883L/mag</mag_topic>
      <sonar_topic>fuselage/mb1240-xl-ez4/link/sonar/sonar</sonar_topic>
    </plugin>
    #}

    {% if enable_gimbal -%} 
    <!--gimbal-->
    <include>
      <uri>model://tarot-t4-3d-gimbal</uri>
      <pose>0 0 -0.05 0 0 0</pose>
    </include>

    <joint name="gimbal_joint" type="fixed">
      <parent>fuselage</parent>
      <child>tarot-t4-3d-gimbal::base-link</child>
    </joint>
    {%- endif %}

    <!--C920 camera-->
    <include>
      <uri>model://c920</uri>
      {% if enable_gimbal -%} 
        <pose>0.13 0 -0.10 {{ np.deg2rad(180) }} 0 0</pose>
      {% else %}
      <pose>0.13 0 0 0 0 0</pose>
      {% endif %}
    </include>

    <joint name="c920_joint" type="fixed">
      <parent>{{ sensor_link }}</parent>
      <child>c920::link</child>
    </joint>

    {#-
    <!--R200 camera-->
    <include>
      <uri>model://r200</uri>
      <pose>0.05 0 0.1 0 0 0</pose>
    </include>

    <joint name="r200_joint" type="fixed">
      <parent>fuselage</parent>
      <child>r200::link</child>
    </joint>
    -#}

    <!--px4flow camera-->
    <include>
      <uri>model://px4flow</uri>
      {% if enable_gimbal -%} 
      <pose>0 0 -0.02 0 {{ np.deg2rad(180) }} {{ np.deg2rad(180) }} </pose>
      {% else %}
      <pose>0 0 0 0 0 0</pose>
      {% endif %}
    </include>

    <joint name="px4flow_joint" type="fixed">
      <parent>{{ sensor_link }}</parent>
      <child>px4flow::link</child>
    </joint>

    <!--lidar-->
    <include>
      <uri>model://sf10a</uri>
      {% if enable_gimbal -%} 
      <pose>0 0 -0.02 0 {{ np.deg2rad(180) }} 0</pose>
      {% else %}
      <pose>0 0 -0.1 0 0 0</pose>
      {% endif %}
    </include>

    <joint name="sf10a_joint" type="fixed">
      <parent>{{ sensor_link }}</parent>
      <child>sf10a::link</child>
    </joint>


    <plugin name='mavlink_interface' filename='librotors_gazebo_mavlink_interface.so'>
      <robotNamespace/>
      <imuSubTopic>/imu</imuSubTopic>
      <opticalFlowSubTopic>/px4flow/link/opticalFlow</opticalFlowSubTopic>
      <lidarSubTopic>/sf10a/link/lidar</lidarSubTopic>
      <mavlink_addr>INADDR_ANY</mavlink_addr>
      <mavlink_udp_port>14560</mavlink_udp_port>
      <motorSpeedCommandPubTopic>/gazebo/command/motor_speed</motorSpeedCommandPubTopic>
      <control_channels>
        <channel name='rotor1'>
          <input_index>0</input_index>
          <input_offset>1</input_offset>
          <input_scaling>550</input_scaling>
          <zero_position_disarmed>0</zero_position_disarmed>
          <zero_position_armed>100</zero_position_armed>
          <joint_control_type>velocity</joint_control_type>
        </channel>
        <channel name='rotor2'>
          <input_index>1</input_index>
          <input_offset>1</input_offset>
          <input_scaling>550</input_scaling>
          <zero_position_disarmed>0</zero_position_disarmed>
          <zero_position_armed>100</zero_position_armed>
          <joint_control_type>velocity</joint_control_type>
        </channel>
        <channel name='rotor3'>
          <input_index>2</input_index>
          <input_offset>1</input_offset>
          <input_scaling>550</input_scaling>
          <zero_position_disarmed>0</zero_position_disarmed>
          <zero_position_armed>100</zero_position_armed>
          <joint_control_type>velocity</joint_control_type>
        </channel>
        <channel name='rotor4'>
          <input_index>3</input_index>
          <input_offset>1</input_offset>
          <input_scaling>550</input_scaling>
          <zero_position_disarmed>0</zero_position_disarmed>
          <zero_position_armed>100</zero_position_armed>
          <joint_control_type>velocity</joint_control_type>
        </channel>
        {% if enable_gimbal -%}
        <channel name="gimbal_roll">
          <input_index>6</input_index>
          <input_offset>0</input_offset>
          <input_scaling>3.1415</input_scaling>
          <zero_position_disarmed>0</zero_position_disarmed>
          <zero_position_armed>0</zero_position_armed>
          <joint_control_type>position_gztopic</joint_control_type>
          <gztopic>/gimbal_roll_cmd</gztopic>
          <joint_name>tarot-t4-3d-gimbal::roll-joint</joint_name>
        </channel>
        <channel name="gimbal_pitch">
          <input_index>7</input_index>
          <input_offset>0</input_offset>
          <input_scaling>3.1415</input_scaling>
          <zero_position_disarmed>0</zero_position_disarmed>
          <zero_position_armed>0</zero_position_armed>
          <joint_control_type>position_gztopic</joint_control_type>
          <gztopic>/gimbal_pitch_cmd</gztopic>
          <joint_name>tarot-t4-3d-gimbal::tilt-joint</joint_name>
        </channel>
        <channel name="gimbal_yaw">
          <input_index>8</input_index>
          <input_offset>0</input_offset>
          <input_scaling>3.1415</input_scaling>
          <zero_position_disarmed>0</zero_position_disarmed>
          <zero_position_armed>0</zero_position_armed>
          <joint_control_type>position_gztopic</joint_control_type>
          <gztopic>/gimbal_yaw_cmd</gztopic>
          <joint_name>tarot-t4-3d-gimbal::pan-joint</joint_name>
        </channel>
        {%- endif %}
      </control_channels>
    </plugin>

    {% if enable_gimbal -%}
    <plugin name='gimbal_controller' filename='librotors_gazebo_gimbal_controller_plugin.so'>
      <joint_yaw>tarot-t4-3d-gimbal::pan-joint</joint_yaw>
      <joint_roll>tarot-t4-3d-gimbal::roll-joint</joint_roll>
      <joint_pitch>tarot-t4-3d-gimbal::tilt-joint</joint_pitch>
      <imu>camera_imu</imu>
    </plugin>
    {%- endif %}
 
    <plugin name='rotors_gazebo_imu_plugin' filename='librotors_gazebo_imu_plugin.so'>
      <robotNamespace></robotNamespace>
      <linkName>fuselage</linkName>
      <imuTopic>/imu</imuTopic>
      <gyroscopeNoiseDensity>0.0003394</gyroscopeNoiseDensity>
      <gyroscopeRandomWalk>3.8785e-05</gyroscopeRandomWalk>
      <gyroscopeBiasCorrelationTime>1000.0</gyroscopeBiasCorrelationTime>
      <gyroscopeTurnOnBiasSigma>0.0087</gyroscopeTurnOnBiasSigma>
      <accelerometerNoiseDensity>0.004</accelerometerNoiseDensity>
      <accelerometerRandomWalk>0.006</accelerometerRandomWalk>
      <accelerometerBiasCorrelationTime>300.0</accelerometerBiasCorrelationTime>
      <accelerometerTurnOnBiasSigma>0.196</accelerometerTurnOnBiasSigma>
    </plugin>

    <plugin name='ground_truth' filename='libgazebo_ros_p3d.so'>
      <robotNamespace>/matrice_100</robotNamespace>
      <alwaysOn>true</alwaysOn>
      <updateRate>100.0</updateRate>
      <robotNamespace></robotNamespace>
      <bodyName>fuselage</bodyName>
      <topicName>ground_truth</topicName>
      <gaussianNoise>0.0</gaussianNoise>
      <frameName>map</frameName>
    </plugin>

  </model>

</sdf>
{#- vim: set et ft=jinja fenc=utf-8 ff=unix sts=0 sw=2 ts=2 : -#}
<!-- vim: set et ft=xml fenc=utf-8 ff=unix sts=0 sw=2 ts=2 : -->
